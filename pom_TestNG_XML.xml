<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>Java-Test-Automation-01</groupId>
	<artifactId>Java-Test-Automation-01</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>
			<plugin> 
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version> 
				<configuration> 
					<source>10</source> 
					<target>10</target> 
					<executable>${JAVA_HOME}/bin/javac</executable> <!-- ${JAVA_HOME}/bin/javac</executable> -->
				</configuration> 
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>  <!-- 2.22.1 -->
				<configuration>
                   <!-- TestNG Suite XML files list for test execution -->
                   <suiteXmlFiles>
                       <suiteXmlFile>testng.xml</suiteXmlFile>
                   </suiteXmlFiles>
               </configuration>
			</plugin>
			<!-- <plugin>
				<groupId>com.github.temyers</groupId>
				<artifactId>cucumber-jvm-parallel-plugin</artifactId>
				<version>2.1.0</version>
				<executions>
					<execute>
						<id>generateRunners</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generateRunners</goal>
						</goals>
						<configuration>
							Mandatory
							comma separated list of package names to scan for glue code
							<glue>safmarine</glue>
							<outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
							The directory, which must be in the root of the runtime classpath, 
								containing your feature files.
							<featuresDirectory>src/test/features/</featuresDirectory>
							Directory where the cucumber report files shall be written
							<cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
							comma separated list of output formats json,html,rerun.txt
							<format>json</format>
							CucumberOptions.strict property
							<strict>true</strict>
							CucumberOptions.monochrome property
							<monochrome>true</monochrome>
							The tags to run, maps to CucumberOptions.tags property you can 
								pass ANDed tags like "@tag1","@tag2" and ORed tags like "@tag1,@tag2,@tag3"
							<tags>"@Regression","@Smoke,"@ExtentReport"</tags>
							If set to true, only feature files containing the required tags 
								shall be generated.
							<filterFeaturesByTags>false</filterFeaturesByTags>
							Generate TestNG runners instead of default JUnit ones.
							<useTestNG>false</useTestNG>
							The naming scheme to use for the generated test classes. One 
								of 'simple' or 'feature-title'
							<namingScheme>simple</namingScheme>
							The class naming pattern to use. Only required/used if naming 
								scheme is 'pattern'.
							<namingPattern>Parallel{c}IT</namingPattern>
							One of [SCENARIO, FEATURE]. SCENARIO generates one runner per 
								scenario. FEATURE generates a runner per feature.
							<parallelScheme>SCENARIO</parallelScheme>
							This is optional, required only if you want to specify a custom 
								template for the generated sources (this is a relative path)
							<customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
		</plugins>
	</build>

	<dependencies>
	
		<!-- dependencies for JUNIT -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- dependencies for SELENIUM -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.13.0</version>
		</dependency>

		<!-- dependencies for EXCEL CONNECTION -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.9</version>
		</dependency>

		<!-- dependencies for CSV -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>3.3</version>
		</dependency>

		<!-- dependencies for IO operations -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- dependencies for CUCUMBER -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>com.github.temyers</groupId>
			<artifactId>cucumber-jvm-parallel-plugin</artifactId>
			<version>4.2.0</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>com.vimalselvam</groupId>
			<artifactId>cucumber-extentsreport</artifactId>
			<version>3.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.aventstack</groupId>
			<artifactId>extentreports</artifactId>
			<version>4.0.6</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.23</version>
		</dependency>


		<!-- dependencies for TESTNG -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.14.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.relevantcodes</groupId>
			<artifactId>extentreports</artifactId>
			<version>2.41.2</version>
		</dependency>

		<!-- dependencies for REST-ASSURED -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>3.3.0</version>
		</dependency>
		<!-- <dependency> <groupId>io.rest-assured</groupId> <artifactId>json-path</artifactId> 
			<version>3.2.0</version> </dependency> -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.4.0</version>
		</dependency>

		<!-- dependencies for DATABASE TESTING -->
		<!-- https://mvnrepository.com/artifact/net.sf.ucanaccess/ucanaccess -->
		<dependency>
			<groupId>net.sf.ucanaccess</groupId>
			<artifactId>ucanaccess</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
	</dependencies>
</project>